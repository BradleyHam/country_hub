{"version":3,"sources":["style/variables.scss","components/FilterBar/FilterBar.module.scss","components/FilterBar/FilterDropdown/FilterDropdown.module.scss","components/CardGrid/Card/Cards.module.scss","components/Header/Header.module.scss","components/CurrentCountry/CurrentCountry.module.scss","components/CardGrid/CardGrid.module.scss","style/index.scss","redux/actions/index.js","style/toggleStyle.js","components/Header/Header.js","components/CardGrid/Card/index.js","components/FilterBar/FilterDropdown/FilterDropdown.js","components/FilterBar/FilterBar.js","components/CardGrid/index.js","components/CurrentCountry/CurrentyCountryUi.js","components/CurrentCountry/CurrentCountry.js","components/App.js","redux/reducers/index.js","index.js"],"names":["module","exports","getData","dispatch","a","fetch","response","json","data","type","payload","toggledStyles","props","background","darkMode","variables","darkBlue","white","color","toggledStylesTwo","veryDarkBlue","veryLightGray","connect","state","toggleDarkMode","style","className","classes","header","onClick","icon","solidMoon","regularMoon","setCurrentCountry","current","country","name","flag","population","region","capital","card","src","alt","details","Intl","NumberFormat","format","selectRegion","useState","dropdownOpen","toggleDropdownOpen","toggleDropdown","filterDropdown","currentRegion","faChevronUp","faChevronDown","dropdownList","map","handleRegionSelect","dropdownItem","searchCountry","searchValue","getState","filterData","length","filter","searchFormValue","setSearchFormValue","filterBar","onSubmit","e","preventDefault","search","value","placeholder","onChange","target","handleInputChange","searchIcon","faSearch","countryFilter","useEffect","grid","countrys","filteredCountrys","key","alpha3Code","to","renderCountrys","status","currentCountry","nativeName","subregion","borders","currencies","languages","button","backButton","countryGrid","listTitle","listValue","language","renderLanguages","borderCountries","border","renderBorders","updateCurrentCountry","id","axios","get","useParams","path","exact","component","CardGrid","CurrentCountry","combineReducers","action","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d75614b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBlue\":\"#2b3945\",\"veryDarkBlue\":\"#202c37\",\"veryDark\":\"#111517\",\"darkGray\":\"#858585\",\"veryLightGray\":\"#fafafa\",\"white\":\"#fff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBlue\":\"#2b3945\",\"veryDarkBlue\":\"#202c37\",\"veryDark\":\"#111517\",\"darkGray\":\"#858585\",\"veryLightGray\":\"#fafafa\",\"white\":\"#fff\",\"filterBar\":\"FilterBar_filterBar__3j4ck\",\"search\":\"FilterBar_search__2Gaja\",\"countryFilter\":\"FilterBar_countryFilter__h6raz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBlue\":\"#2b3945\",\"veryDarkBlue\":\"#202c37\",\"veryDark\":\"#111517\",\"darkGray\":\"#858585\",\"veryLightGray\":\"#fafafa\",\"white\":\"#fff\",\"filterDropdown\":\"FilterDropdown_filterDropdown__3IPc_\",\"dropdownList\":\"FilterDropdown_dropdownList__6hOmR\",\"current\":\"FilterDropdown_current__2F7Uv\",\"dropdownItem\":\"FilterDropdown_dropdownItem__1HLS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBlue\":\"#2b3945\",\"veryDarkBlue\":\"#202c37\",\"veryDark\":\"#111517\",\"darkGray\":\"#858585\",\"veryLightGray\":\"#fafafa\",\"white\":\"#fff\",\"card\":\"Cards_card__2ElSe\",\"flag\":\"Cards_flag__PIw46\",\"details\":\"Cards_details__3eGFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBlue\":\"#2b3945\",\"veryDarkBlue\":\"#202c37\",\"veryDark\":\"#111517\",\"darkGray\":\"#858585\",\"veryLightGray\":\"#fafafa\",\"white\":\"#fff\",\"header\":\"Header_header__1v0yI\",\"toggleDarkMode\":\"Header_toggleDarkMode__1gtMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBlue\":\"#2b3945\",\"veryDarkBlue\":\"#202c37\",\"veryDark\":\"#111517\",\"darkGray\":\"#858585\",\"veryLightGray\":\"#fafafa\",\"white\":\"#fff\",\"currentCountry\":\"CurrentCountry_currentCountry__1qviw\",\"button\":\"CurrentCountry_button__ryAmP\",\"backButton\":\"CurrentCountry_backButton__1CTTl\",\"countryGrid\":\"CurrentCountry_countryGrid__hFqi7\",\"borderCountries\":\"CurrentCountry_borderCountries__2Lhyz\",\"listTitle\":\"CurrentCountry_listTitle__dguAN\",\"listValue\":\"CurrentCountry_listValue__3qfJ6\",\"language\":\"CurrentCountry_language__1QumC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CardGrid_grid__2OwNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBlue\":\"#2b3945\",\"veryDarkBlue\":\"#202c37\",\"veryDark\":\"#111517\",\"darkGray\":\"#858585\",\"veryLightGray\":\"#fafafa\",\"white\":\"#fff\"};","import axios from 'axios'\n\nexport const toggleDarkMode = () => {\n    return {\n        type: 'TOGGLE_DARK_MODE'\n    }\n}\n\nexport const selectRegion = (region) => {\n    return {\n        type: 'SELECT_REGION',\n        payload: region\n    }\n}\n\nexport const getData = () => async (dispatch) => {\n    const response = await fetch('https://restcountries.eu/rest/v2/all');\n    const data = await response.json();\n    dispatch({\n        type: 'COUNTRYS',\n        payload: data\n    })\n}\n\nexport const searchCountry = (searchValue) => async (dispatch, getState) => {\n    const response = await fetch(`https://restcountries.eu/rest/v2/name/${searchValue}`);\n    const data = await response.json();\n\n\n    function filterData() {\n        if (getState().currentRegion !== \"All Regions\" && data.length > 1) {\n            return data.filter(country => country.region === getState().currentRegion)\n        }\n        return data;\n    }\n\n    dispatch({\n        type: 'COUNTRYS',\n        payload: filterData()\n    })\n}\n\n\nexport const updateCurrentCountry = (id) => async (dispatch) => {\n    const data = await axios.get(`https://restcountries.eu/rest/v2/alpha/${id}`);\n    dispatch({\n        type: 'CURRENT_COUNTRY',\n        payload: data.data\n    })\n}\nexport const setCurrentCountry = (current) => {\n    return {\n        type: 'CURRENT_COUNTRY',\n        payload: current\n    }\n}\n\n","import variables from './variables.scss'\n\nexport const toggledStyles = (props) => {\n    return {\n        background: props.darkMode ? variables.darkBlue : variables.white,\n        color: props.darkMode ? variables.white : variables.darkBlue\n    }\n}\nexport const toggledStylesTwo = (props) => {\n    return {\n        background: props.darkMode ? variables.veryDarkBlue : variables.veryLightGray,\n        color: props.darkMode ? variables.veryLightGray : variables.veryDarkBlue\n    }\n}","import React from 'react'\nimport classes from './Header.module.scss'\nimport { faMoon as regularMoon } from '@fortawesome/free-regular-svg-icons'\nimport { faMoon as solidMoon } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from 'react-redux'\nimport { toggleDarkMode } from '../../redux/actions/index'\nimport { toggledStyles } from '../../style/toggleStyle'\n\nconst Header = (props) => {\n\n    return (\n        <header style={toggledStyles(props)} className={classes.header}>\n            <h1>Country Hub</h1>\n            <div className={classes.toggleDarkMode} onClick={props.toggleDarkMode}>\n                {props.darkMode ? <FontAwesomeIcon icon={solidMoon} /> : <FontAwesomeIcon icon={regularMoon} />}\n                <h6>Dark Mode</h6> </div>\n        </header>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        darkMode: state.darkMode\n    }\n}\n\nexport default connect(mapStateToProps, { toggleDarkMode })(Header);","import React from 'react'\nimport classes from './Cards.module.scss'\nimport { toggledStyles } from '../../../style/toggleStyle'\nimport { connect } from 'react-redux'\nimport { setCurrentCountry } from '../../../redux/actions/index'\n\nconst Card = (props) => {\n    const { name, flag, population, region, capital } = props.country\n\n    return (\n        <div className={classes.card} style={toggledStyles(props)} onClick={() => { props.setCurrentCountry(props.country) }}>\n            <img className={classes.flag} src={flag} alt=\"\" />\n            <div className={classes.details}>\n                <h3>{name}</h3>\n                <p><strong>population:</strong><span>{new Intl.NumberFormat().format(population)}</span></p>\n                <p><strong>region:</strong><span>{region}</span></p>\n                <p><strong>capital:</strong><span>{capital}</span></p>\n            </div>\n        </div>\n    );\n}\n\nexport default connect(state => state, { setCurrentCountry })(Card);","import React, { useState } from 'react'\nimport classes from './FilterDropdown.module.scss'\nimport { connect } from 'react-redux'\nimport { selectRegion, getData } from '../../../redux/actions/index'\nimport { toggledStyles } from '../../../style/toggleStyle'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst FilterDropdown = (props) => {\n    const [dropdownOpen, toggleDropdownOpen] = useState(false);\n    const regions = ['All Regions', 'Africa', 'Americas', 'Asia', 'Europe', 'Oceania'];\n\n    function handleRegionSelect(region) {\n        props.getData()\n        props.selectRegion(region)\n        toggleDropdown()\n    }\n    function toggleDropdown() {\n        toggleDropdownOpen(!dropdownOpen)\n    }\n\n    return (\n        <div className={classes.filterDropdown}>\n            <div style={toggledStyles(props)} className={classes.current} onClick={toggleDropdown}>{props.currentRegion}\n                {dropdownOpen ? <FontAwesomeIcon icon={faChevronUp} /> : <FontAwesomeIcon icon={faChevronDown} />}\n            </div>\n\n            {dropdownOpen &&\n                <ul style={toggledStyles(props)} className={classes.dropdownList}>\n                    {regions.map(region => <li onClick={() => { handleRegionSelect(region) }} className={classes.dropdownItem}>{region}</li>)}\n                </ul>}\n        </div>\n    );\n}\n\nexport default connect(state => state, { selectRegion, getData })(FilterDropdown);","import React, { useState } from 'react'\nimport classes from './FilterBar.module.scss'\nimport { toggledStyles, toggledStylesTwo } from '../../style/toggleStyle'\nimport { connect } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport FilterDropdown from './FilterDropdown/FilterDropdown'\nimport { searchCountry, getData } from '../../redux/actions/index'\n\n\nconst FilterBar = (props) => {\n    const [searchFormValue, setSearchFormValue] = useState('');\n\n    function handleInputChange(e) {\n        setSearchFormValue(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        searchFormValue.length > 0 ? props.searchCountry(searchFormValue) : props.getData();\n        setSearchFormValue('');\n    }\n\n\n    return (\n        <div style={toggledStylesTwo(props)} className={classes.filterBar}>\n            <form onSubmit={handleSubmit} style={toggledStyles(props)} className={classes.search}>\n                <input value={searchFormValue} type=\"text\" placeholder='Search for a Country: '\n                    onChange={(e) => { (handleInputChange(e)) }}\n                />\n                <button type='submit' className={classes.searchIcon}>\n                    <FontAwesomeIcon icon={faSearch} />\n                </button>\n            </form>\n            <div className={classes.countryFilter}>\n                <FilterDropdown />\n            </div>\n        </div>\n    );\n}\n\nexport default connect(state => state, { searchCountry, getData })(FilterBar);\n\n\n\n\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport classes from './CardGrid.module.scss'\nimport Card from './Card/index'\nimport { toggledStylesTwo } from '../../style/toggleStyle'\nimport { getData } from '../../redux/actions/index'\nimport FilterBar from '../../components/FilterBar/FilterBar'\n\n\nconst CardGrid = (props) => {\n\n\n    useEffect(() => {\n        props.getData()\n    })\n\n\n    const renderCountrys = () => {\n        if (props.currentRegion !== 'All Regions') {\n            let filteredCountrys = props.countrys.filter(country => country.region === props.currentRegion);\n\n            if (filteredCountrys.length < 1) {\n                return (<h1>Nothing Found</h1>)\n            }\n\n            return filteredCountrys.map(country =>\n                <Link key={country.alpha3Code} to={`/country/${country.alpha3Code}`}>\n                    <Card country={country}>{country.name}</Card>\n                </Link>)\n        }\n        return props.countrys.map(country =>\n            <Link key={country.alpha3Code} to={`/country/${country.alpha3Code}`}>\n                <Card  country={country}>{country.name}</Card>\n            </Link>)\n    }\n\n\n\n    return (\n        <div>\n            <FilterBar />\n            <div style={toggledStylesTwo(props)} className={classes.grid}>\n                {props.countrys && props.countrys.length > 0 && renderCountrys()}\n                {props.countrys && props.countrys.length < 1 && <h1>Nothing Found</h1>}\n                {props.countrys && props.countrys.status === 404 && <h1>Nothing Found</h1>}\n\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default connect(state => state, { getData })(CardGrid);\n\n","import React from 'react';\nimport classes from './CurrentCountry.module.scss'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { toggledStyles } from '../../style/toggleStyle'\n\nconst CurrentCountryUi = (props) => {\n\n    let { name, flag, nativeName, population, region,\n        subregion, capital, borders,\n        currencies, languages } = props.currentCountry;\n\n    function renderBorders() {\n        if (borders) {\n            return borders.map(border =>\n                <Link to={`${border}`}>\n                    <button\n                        style={toggledStyles(props)}\n                        className={classes.button}>{border} </button>\n                </Link>\n            )\n        }\n    }\n\n    function renderLanguages() {\n        if (languages) {\n            return languages.map(language => <span className={classes.language}>{language.name}</span>)\n        }\n    }\n\n    return (\n\n        <div className='container'>\n            <div className={classes.header}>\n                <Link to='/'>\n                    <button style={toggledStyles(props)} className={`${classes.button} ${classes.backButton}`}>Back</button>\n                </Link>\n            </div>\n            <div className={classes.countryGrid}>\n                <img src={flag} alt=\"\" />\n                <h1>{name}</h1>\n                <ul>\n                    <li>\n                        <span className={classes.listTitle}>Native Name:</span>\n                        <span className={classes.listValue}>{nativeName}</span>\n                    </li>\n                    <li>\n                        <span className={classes.listTitle}>Population:</span>\n                        <span className={classes.listValue}>{new Intl.NumberFormat().format(population)}</span>\n                    </li>\n                    <li>\n                        <span className={classes.listTitle}>Region:</span>\n                        <span className={classes.listValue}>{region}</span>\n                    </li>\n                    <li>\n                        <span className={classes.listTitle}>Sub Region:</span>\n                        <span className={classes.listValue}>{subregion}</span>\n                    </li>\n                    <li>\n                        <span className={classes.listTitle}>Capital:</span>\n                        <span className={classes.listValue}>{capital}</span>\n                    </li>\n                    <li>\n                        <span className={classes.listTitle}>Currency:</span>\n                        <span className={classes.listValue}>{currencies && currencies[0].name}</span>\n                    </li>\n                    <li>\n                        <span className={classes.listTitle}>Languages:</span>\n                        <span className={classes.listValue}>{renderLanguages()}</span>\n                    </li>\n                </ul>\n\n                <div className={classes.borderCountries}>\n                    <p>Border Countries:</p>\n                    {borders.length > 1 ? renderBorders() : 'None'}\n                </div>\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default connect(state => state)(CurrentCountryUi);","import React, {  useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport classes from './CurrentCountry.module.scss'\nimport { connect } from 'react-redux'\nimport { updateCurrentCountry } from '../../redux/actions/index'\nimport { toggledStylesTwo } from '../../style/toggleStyle'\nimport CurrentCountryUi from './CurrentyCountryUi'\n\nconst CurrentCountry = (props) => {\n\n\n    let { id } = useParams()\n\n    useEffect(() => {\n        props.updateCurrentCountry(id)\n    }, [])\n\n    useEffect(() => {\n        props.updateCurrentCountry(id)\n    }, [id])\n\n\n\n    return (\n        <div style={toggledStylesTwo(props)} className={classes.currentCountry}>\n            {props.currentCountry && <CurrentCountryUi />}\n\n        </div>\n    );\n}\n\nexport default connect(state => state, { updateCurrentCountry })(CurrentCountry);","import React from 'react'\nimport Header from './Header/Header'\n\nimport CardGrid from './CardGrid'\nimport CurrentCountry from './CurrentCountry/CurrentCountry'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst App = (props) => {\n    return (\n        <Router>\n            <Header />\n\n            <Route path='/' exact component={CardGrid} />\n            <Route path='/country/:id' component={CurrentCountry} />\n        </Router>\n    );\n}\n\nexport default connect(state => state)(App);","import { combineReducers } from 'redux'\n\n\nconst darkModeReducer = (state = true, action) => {\n    switch (action.type) {\n        case 'TOGGLE_DARK_MODE':\n            return !state\n        default:\n            return state\n    }\n}\n\nconst currentRegionReducer = (state = 'All Regions', action) => {\n    switch (action.type) {\n        case 'SELECT_REGION':\n            return action.payload\n        default:\n            return state\n    }\n}\nconst countryReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'COUNTRYS':\n            return action.payload\n        default:\n            return state\n    }\n}\nconst currentCountryReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'CURRENT_COUNTRY':\n            return action.payload\n        default:\n            return state\n    }\n}\n\n\n\nexport default combineReducers({\n    darkMode: darkModeReducer,\n    currentRegion: currentRegionReducer,\n    countrys: countryReducer,\n    currentCountry: currentCountryReducer,\n\n})","import { render } from 'react-dom'\nimport React from 'react'\nimport App from './components/App'\nimport './style/index.scss'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport reducers from './redux/reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'))"],"sourceRoot":""}